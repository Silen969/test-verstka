/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-left-name: 'arrow-left';
@arrow-left-x: 0px;
@arrow-left-y: 0px;
@arrow-left-offset-x: 0px;
@arrow-left-offset-y: 0px;
@arrow-left-width: 48px;
@arrow-left-height: 48px;
@arrow-left-total-width: 131px;
@arrow-left-total-height: 120px;
@arrow-left-image: '../img/sprite.png';
@arrow-left: 0px 0px 0px 0px 48px 48px 131px 120px '../img/sprite.png' 'arrow-left';
@bell-2-name: 'bell-2';
@bell-2-x: 0px;
@bell-2-y: 100px;
@bell-2-offset-x: 0px;
@bell-2-offset-y: -100px;
@bell-2-width: 22px;
@bell-2-height: 20px;
@bell-2-total-width: 131px;
@bell-2-total-height: 120px;
@bell-2-image: '../img/sprite.png';
@bell-2: 0px 100px 0px -100px 22px 20px 131px 120px '../img/sprite.png' 'bell-2';
@bell-name: 'bell';
@bell-x: 32px;
@bell-y: 100px;
@bell-offset-x: -32px;
@bell-offset-y: -100px;
@bell-width: 22px;
@bell-height: 20px;
@bell-total-width: 131px;
@bell-total-height: 120px;
@bell-image: '../img/sprite.png';
@bell: 32px 100px -32px -100px 22px 20px 131px 120px '../img/sprite.png' 'bell';
@black-flat-name: 'black_flat';
@black-flat-x: 93px;
@black-flat-y: 100px;
@black-flat-offset-x: -93px;
@black-flat-offset-y: -100px;
@black-flat-width: 19px;
@black-flat-height: 18px;
@black-flat-total-width: 131px;
@black-flat-total-height: 120px;
@black-flat-image: '../img/sprite.png';
@black-flat: 93px 100px -93px -100px 19px 18px 131px 120px '../img/sprite.png' 'black_flat';
@flat-name: 'flat';
@flat-x: 64px;
@flat-y: 100px;
@flat-offset-x: -64px;
@flat-offset-y: -100px;
@flat-width: 19px;
@flat-height: 18px;
@flat-total-width: 131px;
@flat-total-height: 120px;
@flat-image: '../img/sprite.png';
@flat: 64px 100px -64px -100px 19px 18px 131px 120px '../img/sprite.png' 'flat';
@herb-name: 'herb';
@herb-x: 42px;
@herb-y: 58px;
@herb-offset-x: -42px;
@herb-offset-y: -58px;
@herb-width: 32px;
@herb-height: 32px;
@herb-total-width: 131px;
@herb-total-height: 120px;
@herb-image: '../img/sprite.png';
@herb: 42px 58px -42px -58px 32px 32px 131px 120px '../img/sprite.png' 'herb';
@knowledge-name: 'knowledge';
@knowledge-x: 58px;
@knowledge-y: 0px;
@knowledge-offset-x: -58px;
@knowledge-offset-y: 0px;
@knowledge-width: 32px;
@knowledge-height: 33px;
@knowledge-total-width: 131px;
@knowledge-total-height: 120px;
@knowledge-image: '../img/sprite.png';
@knowledge: 58px 0px -58px 0px 32px 33px 131px 120px '../img/sprite.png' 'knowledge';
@ok-name: 'ok';
@ok-x: 0px;
@ok-y: 58px;
@ok-offset-x: 0px;
@ok-offset-y: -58px;
@ok-width: 32px;
@ok-height: 32px;
@ok-total-width: 131px;
@ok-total-height: 120px;
@ok-image: '../img/sprite.png';
@ok: 0px 58px 0px -58px 32px 32px 131px 120px '../img/sprite.png' 'ok';
@photo-name: 'photo';
@photo-x: 100px;
@photo-y: 0px;
@photo-offset-x: -100px;
@photo-offset-y: 0px;
@photo-width: 31px;
@photo-height: 31px;
@photo-total-width: 131px;
@photo-total-height: 120px;
@photo-image: '../img/sprite.png';
@photo: 100px 0px -100px 0px 31px 31px 131px 120px '../img/sprite.png' 'photo';
@search-name: 'search';
@search-x: 100px;
@search-y: 75px;
@search-offset-x: -100px;
@search-offset-y: -75px;
@search-width: 14px;
@search-height: 13px;
@search-total-width: 131px;
@search-total-height: 120px;
@search-image: '../img/sprite.png';
@search: 100px 75px -100px -75px 14px 13px 131px 120px '../img/sprite.png' 'search';
@star-name: 'star';
@star-x: 100px;
@star-y: 41px;
@star-offset-x: -100px;
@star-offset-y: -41px;
@star-width: 24px;
@star-height: 24px;
@star-total-width: 131px;
@star-total-height: 120px;
@star-image: '../img/sprite.png';
@star: 100px 41px -100px -41px 24px 24px 131px 120px '../img/sprite.png' 'star';
@spritesheet-width: 131px;
@spritesheet-height: 120px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @arrow-left @bell-2 @bell @black-flat @flat @herb @knowledge @ok @photo @search @star;
@spritesheet: 131px 120px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
